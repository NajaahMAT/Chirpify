definitions:
  model.GeoLocation:
    properties:
      latitude:
        type: number
      longitude:
        type: number
      place:
        description: Place ID for the location
        type: string
    type: object
  model.PrivacySettings:
    properties:
      value:
        description: 'Options: "PUBLIC", "FRIENDS", "ONLY_ME", "CUSTOM"'
        type: string
    type: object
  request.CommentRequest:
    properties:
      attachments:
        items:
          type: string
        type: array
      comment_text:
        description: The content of the comment
        type: string
      created_at:
        type: string
      is_edited:
        type: boolean
      parent_comment_id:
        type: integer
      updated_at:
        type: string
      user_id:
        description: ID of the user adding the comment
        type: integer
    required:
    - comment_text
    - user_id
    type: object
  request.CreatePostRequest:
    properties:
      allow_cmt:
        type: boolean
      caption:
        type: string
      description:
        type: string
      file_url:
        type: string
      link:
        type: string
      location:
        $ref: '#/definitions/model.GeoLocation'
      message:
        description: Pointer to differentiate between no update and clearing the value
        type: string
      name:
        type: string
      picture:
        type: string
      privacy:
        $ref: '#/definitions/model.PrivacySettings'
      scheduled_publish_time:
        type: integer
      source:
        type: string
      status:
        description: '"published", "draft"'
        type: string
      tags:
        items:
          type: string
        type: array
      user_id:
        type: integer
    required:
    - user_id
    type: object
  request.LikeRequest:
    properties:
      post_id:
        type: integer
      user_id:
        type: integer
    type: object
  request.UpdatePostRequest:
    properties:
      allow_cmt:
        type: boolean
      caption:
        type: string
      description:
        type: string
      file_url:
        type: string
      link:
        type: string
      location:
        $ref: '#/definitions/model.GeoLocation'
      message:
        description: Pointer to differentiate between no update and clearing the value
        type: string
      name:
        type: string
      picture:
        type: string
      privacy:
        $ref: '#/definitions/model.PrivacySettings'
      scheduled_publish_time:
        type: integer
      source:
        type: string
      status:
        description: '"published", "draft"'
        type: string
      tags:
        items:
          type: string
        type: array
    type: object
  response.Response:
    properties:
      code:
        type: integer
      data: {}
      status:
        type: string
    type: object
info:
  contact: {}
paths:
  /posts:
    get:
      description: Get a list of all posts
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Retrieve all posts
      tags:
      - Posts
    post:
      consumes:
      - application/json
      description: Create a new post for a user
      parameters:
      - description: Create Post Request
        in: body
        name: post
        required: true
        schema:
          $ref: '#/definitions/request.CreatePostRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Create a new post
      tags:
      - Posts
  /posts/{postID}:
    put:
      consumes:
      - application/json
      description: Update an existing post with new data
      parameters:
      - description: Post ID
        in: path
        name: postID
        required: true
        type: integer
      - description: Update Post Request
        in: body
        name: post
        required: true
        schema:
          $ref: '#/definitions/request.UpdatePostRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Update an existing post
      tags:
      - Posts
  /posts/{postID}/comments:
    post:
      consumes:
      - application/json
      description: Add a comment to an existing post
      parameters:
      - description: Post ID
        in: path
        name: postID
        required: true
        type: integer
      - description: Comment Request
        in: body
        name: commentRequest
        required: true
        schema:
          $ref: '#/definitions/request.CommentRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Add a comment to a specific post
      tags:
      - Posts
  /posts/{postID}/details:
    get:
      description: Get all details of a specific post by its ID
      parameters:
      - description: Post ID
        in: path
        name: postID
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Retrieve all details of a specific post, including comments and likes
      tags:
      - Posts
  /posts/like:
    post:
      consumes:
      - application/json
      description: Like a post by providing the like request
      parameters:
      - description: Like Post Request
        in: body
        name: likeRequest
        required: true
        schema:
          $ref: '#/definitions/request.LikeRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Like a specific post
      tags:
      - Posts
swagger: "2.0"
